# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master
- vNext

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: Npm@1
  inputs:
    command: 'install'

- task: Npm@1
  displayName: 'Convert from a markdown to a html'
  inputs:
    command: 'custom'
    customCommand: 'run html'

- task: Bash@3
  displayName: 'Download vivliostyle'
  inputs:
    targetType: 'inline'
    script: |
      wget http://vivliostyle.github.io/vivliostyle.js/downloads/vivliostyle-js-latest.zip
      unzip vivliostyle-js-latest.zip
      cd vivliostyle*

- task: AzureCLI@1
  displayName: 'Copy vivliostyle to a static web'
  inputs:
    azureSubscription: $(azureSubscription)
    scriptLocation: 'inlineScript'
    inlineScript: 'az storage blob upload-batch -s ~/vivliostyle-*/viewer -d "$(azureBlobUrl)/\$web"'

- task: AzureCLI@1
  displayName: 'Copy the media of the book to a static web'
  inputs:
    azureSubscription: $(azureSubscription)
    scriptLocation: 'inlineScript'
    inlineScript: 'az storage blob upload-batch -s ~/build/media -d "$(azureBlobUrl)/\$web/src"'

- task: AzureCLI@1
  displayName: 'Copy the html of the book to a static web'
  inputs:
    azureSubscription: $(azureSubscription)
    scriptLocation: 'inlineScript'
    inlineScript: 'az storage blob upload-batch -s ~/build/book.html -d "$(azureBlobUrl)/\$web/src"'

- task: CmdLine@2
  displayName: 'Print pdf file'
  inputs:
    script: 'node .\build\buildPdf.js $(azureStaticWebUrl)'

- task: AzureCLI@1
  displayName: 'Push the pdf to static web'
  inputs:
    azureSubscription: $(azureSubscription)
    scriptLocation: 'inlineScript'
    inlineScript: 'az storage blob upload-batch -s ~/dist/guideline-$(Build.SourceBranchName).pdf -d "$(azureBlobUrl)/\$web/dist"'